worker_processes 1; #worker的数量
#error_log logs/error.log;
events {
    worker_connections 1024;
}
http {
    server {
        listen 1231;
        location / {
            default_type text/html;
            content_by_lua_block {
                ngx.say("Hello,World")
            }
        }
        location = /sum {
            internal;
            content_by_lua_block {
                ngx.sleep(0.1)
                local args = ngx.req.get_uri_args()
                ngx.say(tonumber(args.a) + tonumber(args.b))
            }
        }
        location /sub {
            content_by_lua_block {
                ngx.say("sub pre: ", ngx.ctx.blah)
                ngx.ctx.blah = 32
                ngx.say("sub post: ", ngx.ctx.blah)
            }
        }

        location /main {
            content_by_lua_block {
                ngx.ctx.blah = 73
                ngx.say("main pre: ", ngx.ctx.blah)
                local res = ngx.location.capture("/sub")
                ngx.print(res.body)
                ngx.say("main post: ", ngx.ctx.blah)
            }
        }
        location = /subduction {
            internal;
            content_by_lua_block {
                ngx.sleep(0.1)
                local arg = ngx.req.get_uri_args()
                ngx.print(tonumber(arg.a) - tonumber(arg.b))
            }
        }
        location = /app/test {
            content_by_lua_block {
                local res = ngx.location.capture(
                    "/sum", {args={a=3,b=8}}
                )
                ngx.say("status:", res.status, " response:", res.body)
            }
        }
        location = /app/test_parallels {
            content_by_lua_block {
                local start_time = ngx.now()
                local res1,res2 = ngx.location.capture_multi({
                    {"/sum", {args={a=3,b=8}}},
                    {"/subduction",{args={a=3,b=8}}}
                })
                ngx.say("status:" , res1.status, " response:", res1.body)
                ngx.say("status:" , res2.status, " response:", res2.body)
                ngx.say("time used:" , ngx.now() - start_time)
            }
        }
        location = /app/test_queue {
            content_by_lua_block {
                local start_time = ngx.now()
                local res1 = ngx.location.capture_multi({
                    {"/sum",{args={a=3, b=8}}}
                })
                local res2 = ngx.location.capture_multi({
                    {"/subduction", {args={a=3,b=8}}}
                })
                ngx.say("status:", res1.status, " response:", res1.body)
                ngx.say("status:", res2.status, " response:", res2.body)
                ngx.say("time used:", ngx.now() - start_time)
            }
        }
    }
}
